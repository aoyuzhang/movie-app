{"version":3,"sources":["components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","props","movies","map","movie","index","className","src","Poster","alt","MovieListHeading","heading","SearchBox","value","onChange","event","setSearchValue","target","placeholder","App","useState","setMovies","searchValue","getMovieRequest","a","url","fetch","response","json","responseJson","Search","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAceA,EAZG,SAACC,GAClB,OACC,mCACEA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACjB,qBAAKC,UAAU,mDAAf,SACC,qBAAKC,IAAKH,EAAMI,OAAQC,IAAI,kBCGlBC,EARU,SAACT,GACxB,OACE,qBAAKK,UAAY,MAAjB,SACE,6BAAKL,EAAMU,aCUFC,EAbG,SAACX,GAClB,OACC,qBAAKK,UAAU,eAAf,SACC,uBACCA,UAAU,eACVO,MAAOZ,EAAMY,MACbC,SAAU,SAACC,GAAD,OAAWd,EAAMe,eAAeD,EAAME,OAAOJ,QACvDK,YAAY,yBC8BDC,EAhCH,WACX,MAA4BC,mBAAS,IAArC,mBAAOlB,EAAP,KAAemB,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBN,EAApB,KAEMO,EAAe,uCAAG,WAAOD,GAAP,mBAAAE,EAAA,6DACjBC,EADiB,oCACkBH,EADlB,6BAGAI,MAAMD,GAHN,cAGjBE,EAHiB,gBAIIA,EAASC,OAJb,QAIjBC,EAJiB,QAMNC,QAChBT,EAAUQ,EAAaC,QAPD,2CAAH,sDAerB,OAJAC,qBAAU,WACTR,EAAgBD,KACd,CAACA,IAGH,sBAAKhB,UAAU,4BAAf,UACC,sBAAKA,UAAU,0CAAf,UACC,cAAC,EAAD,CAAkBK,QAAQ,WAC1B,cAAC,EAAD,CAAWW,YAAaA,EAAaN,eAAgBA,OAEtD,qBAAKV,UAAU,MAAf,SACC,cAAC,EAAD,CAAWJ,OAAQA,UCrBR8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c1398b28.chunk.js","sourcesContent":["import React from 'react';\n\nconst MovieList = (props) => {\n\treturn (\n\t\t<>\n\t\t\t{props.movies.map((movie, index) => (\n\t\t\t\t<div className='image-container d-flex justify-content-start m-3'>\n\t\t\t\t\t<img src={movie.Poster} alt='movie'></img>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default MovieList;\n","import React from 'react';\n\nconst MovieListHeading = (props) => {\n  return (\n    <div className = 'col'>\n      <h1>{props.heading}</h1>\n    </div>\n  );\n};\n\nexport default MovieListHeading;\n","import React from 'react';\n\nconst SearchBox = (props) => {\n\treturn (\n\t\t<div className='col col-sm-4'>\n\t\t\t<input\n\t\t\t\tclassName='form-control'\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={(event) => props.setSearchValue(event.target.value)}\n\t\t\t\tplaceholder='Type to search...'\n\t\t\t></input>\n\t\t</div>\n\t);\n};\n\nexport default SearchBox;\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\n\nconst App = () => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [searchValue, setSearchValue] = useState('');\n\n\tconst getMovieRequest = async (searchValue) => {\n\t\tconst url = `http://www.omdbapi.com/?s=${searchValue}&apikey=263d22d8`;\n\n\t\tconst response = await fetch(url);\n\t\tconst responseJson = await response.json();\n\n\t\tif (responseJson.Search) {\n\t\t\tsetMovies(responseJson.Search);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetMovieRequest(searchValue);\n\t}, [searchValue]);\n\n\treturn (\n\t\t<div className='container-fluid movie-app'>\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Movies' />\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<MovieList movies={movies} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}